@model VaultSystem.Models.VaultView
<div class="vault-left-block">
    @if (Model.UserRoles.Exists(r => r == "VaultAdmin"))
    {
        <h4>My vaults</h4>
        if (Model.MyVaults != null)
        {
            foreach (var vault in Model.MyVaults)
            {
                @Html.ActionLink(vault.Name, "Index", new { vaultId = vault.Id }, new { @class = vault.Id==Model.VaultId ? "vault-left-block-item selected" : "vault-left-block-item" })
            }
        }
        @Html.ActionLink("Create vault", "Create", "Vault", new { @class = "vault-left-block-btn" });
    }
    @if (Model.OtherVaults != null)
    {
        if (Model.OtherVaults.Any())
        {
            <h4>Other users vaults</h4>
            foreach (var vault in Model.OtherVaults)
            {
                @Html.ActionLink(vault.Name, "Index", new { vaultId = vault.Id }, new { @class = vault.Id == Model.VaultId ? "vault-left-block-item selected" : "vault-left-block-item" })
            }
        }
    }
</div>
<div class="vault-manage-panel">
    @if(Model.UserRoles.Exists(r=>r == "VaultAdmin") && Model.VaultId > 0)
    {
        <ul class="vault-manage-panel-items">
            <li>
                @Html.ActionLink("Access settings", "AccessSettings", new { Id = Model.VaultId })
            </li>
        </ul>
    }
</div>
<div class="vailt-item-content">
    @if (Model.VaultId > 0)
    {
        @Html.Action("VaultItems", new { vaultId = Model.VaultId })
    }
</div>